syntax = "proto3";

package opentelemetry.proto.collector.logs.v1;

import "google/protobuf/timestamp.proto";

option csharp_namespace = "OpenTelemetry.Proto.Collector.Logs.V1";

// Service for collecting log data
service LogsService {
  rpc Export(ExportLogsServiceRequest) returns (ExportLogsServiceResponse) {}
}

message ExportLogsServiceRequest {
  repeated ResourceLogs resource_logs = 1;
}

message ExportLogsServiceResponse {
  ExportLogsPartialSuccess partial_success = 1;
}

message ExportLogsPartialSuccess {
  int64 rejected_log_records = 1;
  string error_message = 2;
}

message ResourceLogs {
  Resource resource = 1;
  repeated ScopeLogs scope_logs = 2;
}

message ScopeLogs {
  InstrumentationScope scope = 1;
  repeated LogRecord log_records = 2;
}

message LogRecord {
  uint64 time_unix_nano = 1;
  SeverityNumber severity_number = 2;
  string severity_text = 3;
  AnyValue body = 4;
  repeated KeyValue attributes = 5;
  bytes trace_id = 6;
  bytes span_id = 7;
}

enum SeverityNumber {
  SEVERITY_NUMBER_UNSPECIFIED = 0;
  SEVERITY_NUMBER_TRACE = 1;
  SEVERITY_NUMBER_DEBUG = 5;
  SEVERITY_NUMBER_INFO = 9;
  SEVERITY_NUMBER_WARN = 13;
  SEVERITY_NUMBER_ERROR = 17;
  SEVERITY_NUMBER_FATAL = 21;
}

// Reuse types from trace service
message Resource {
  repeated KeyValue attributes = 1;
}

message InstrumentationScope {
  string name = 1;
  string version = 2;
  repeated KeyValue attributes = 3;
}

message KeyValue {
  string key = 1;
  AnyValue value = 2;
}

message AnyValue {
  oneof value {
    string string_value = 1;
    bool bool_value = 2;
    int64 int_value = 3;
    double double_value = 4;
    ArrayValue array_value = 5;
    KeyValueList kvlist_value = 6;
    bytes bytes_value = 7;
  }
}

message ArrayValue {
  repeated AnyValue values = 1;
}

message KeyValueList {
  repeated KeyValue values = 1;
}